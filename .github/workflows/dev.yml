name: Build and Deploy [DEV]

on:
  push:
    branches: [ develop ]

jobs:
  install:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [ 16.x ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

#      - name: Install Dependencies
#        run: npm install
#        env:
#          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Cypress install
        uses: cypress-io/github-action@v4.2.0
        with:
          runTests: false
          build: npm run build:dev
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Save build folder
        uses: actions/upload-artifact@v2
        with:
          name: dist
          if-no-files-found: error
          path: dist

  e2e-chrome-test:
    runs-on: ubuntu-20.04
    needs: install
    strategy:
      fail-fast: false
      matrix:
        node-version: [ 16.x ]
#        containers: [ 1, 2, 3, 4, 5 ]
    steps:

      - name: Download the build folders
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist

      - name: Run Tests
        uses: cypress-io/github-action@v4.2.0
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          CYPRESS_USERNAME: ${{ secrets.CYPRESS_USERNAME }}
          CYPRESS_PASSWORD: ${{ secrets.CYPRESS_PASSWORD }}
        with:
          project: dist
          start: npm run start:dev
          wait-on: 'http://localhost:4200'
          browser: chrome
          record: true
          video: false
#          parallel: false
#          group: 'UI - Chrome'
          spec: 'cypress/**/newLead.cy.ts'

  deploy:
    needs: e2e-chrome-test
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [ 16.x ]
    steps:

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Download the build folders
        uses: actions/download-artifact@v2
        with:
          name: dist

      - name: Configure committer
        run: |
          git config user.name "curtisblanchette"
          git config user.email "<curtis@4iiz.com>"

      # Bumps the Version number based on patterns found in the commit message
      - name: Generate CHANGELOG + Bump Version
        run: |
          npm i -g standard-version
          npm run release
          git push --follow-tags origin develop
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Build Application
        run: npm run build:dev
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Upload to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "us-east-1"
        run: aws s3 sync ./dist/ s3://dominion-ui-dev --delete --region ${AWS_REGION}

      - name: Create CloudFront Cache Invalidation
        uses: chetan/invalidate-cloudfront-action@master
        env:
          DISTRIBUTION: ${{ secrets.CLOUDFRONT_DEV_ID }}
          PATHS: "/*"
          AWS_REGION: "us-east-1"
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
