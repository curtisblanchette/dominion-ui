@import '~src/assets/css/variables';

/* class applies to select element itself, not a wrapper element */
:host {
  display: block;
  position: relative;
  margin-bottom: $input-margin-bottom;
  overflow: hidden;
  border-radius: $input-border-radius;

  &.has-label {
    margin-top: 30px;
    color: rgba(198, 203, 237, .62);
  }

  &.ng-invalid {
    input {
      // border-bottom: 2px solid red;
    }
  }

  &:after {
    display: block;
    position: absolute;
    content: '';
    width: 0;
    height: 2px;
    bottom: 0;
    background: $red0;
  }

  &.ng-invalid.ng-dirty {
    &:after {
      width: 90%;
      animation: line .25s forwards;
    }
  }

  @keyframes line {
    from {
      left: 50%;
      width: 0;
    }
    to {
      left: 0;
      width: 100%;
    }
  }

  label {
    text-transform: uppercase;
    font-size: 10px;
    margin-bottom: 0;
    position: absolute;
    top: -20px;
    left: 2em; // should be $input-padding-lr but we have to offset for the relative box-model.
  }

  i.fa {
    position: absolute;
    top: 13px;
    left: 18px;
    color: #4D71A3;
    z-index: 1;
    font-size: 18px;
  }

  input {
    border-radius: $input-border-radius;
    width: 100%;
    position: relative;
    display: block;
    color: $text1;
    font-weight: 500;
    line-height: 44px;
    padding:$input-padding-tb $input-padding-lr;
    box-sizing: border-box;
    margin: 0;
    border: none;
    @include elevate(1);
    -moz-appearance: none;
    -webkit-appearance: none;
    appearance: none;
    background-color: $slate4;
    cursor: text;

    &.has-icon {
      padding: 0 16px 0 54px;
    }

    &.number {
      text-align: right;
    }
    &:focus {
      @include focusRing($focusring, $focusring-moz-mac);
      color: $text1;
      outline: none;
    }

    &::-ms-expand {
      display: none;
    }

    /**
     Removes the autocomplete default background styling in chrome
     */
    &:-webkit-autofill,
    &:-webkit-autofill:focus {
      transition: background-color 600000s 0s, color 600000s 0s;
    }

    input[data-autocompleted] {
      background-color: transparent !important;
    }

    &:disabled, &[aria-disabled=true] {
      opacity: .5;
      cursor: not-allowed;
    }

    &:disabled:hover, &[aria-disabled=true] {
      border-color: #aaa;
    }

    /* Chrome, Safari, Edge, Opera */
    &::-webkit-outer-spin-button,
    &::-webkit-inner-spin-button {
      -webkit-appearance: none;
      margin: 0;
    }

    /* Firefox */
    &[type=number] {
      -moz-appearance: textfield;
    }
  }


}


::placeholder { /* Chrome, Firefox, Opera, Safari 10.1+ */
  color: #A7B2D2;
}

:-ms-input-placeholder { /* Internet Explorer 10-11 */
  color: #A7B2D2;
}

::-ms-input-placeholder { /* Microsoft Edge */
  color: #A7B2D2;
}
